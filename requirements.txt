# --- Audio/Video/Colorization requirements for robust pipeline ---
# Audio processing
pydub
librosa
soundfile
scipy>=1.11.0
torchaudio
noisereduce
ffmpeg-python
tqdm
# Colorization/DeOldify
fastai==1.0.61
torch>=1.7.1
torchvision
# Use torch with CUDA if available, or CPU fallback
# pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121
opencv-python
matplotlib
scipy
requests
pyyaml
bottleneck
numexpr
pandas
fastprogress
beautifulsoup4
# Video/audio handling
moviepy
yt-dlp
# AI Upscaling
realesrgan
basicsr>=1.4.2
facexlib>=0.2.5
gfpgan>=1.3.5
# System
numpy
pillow>=9.0.0
# YouTube API integration
google-api-python-client
google-auth-oauthlib
google-auth-httplib2
# Environment variables
python-dotenv
# Terminal and utility
colorama
argparse
ipython
# Image restoration dependencies
opencv-python
numpy
torch
tqdm
realesrgan
basicsr
requests
numpy<2
# ---
# NOTE: You must have ffmpeg installed and on your system PATH for full functionality.
# 
# To install all requirements:
# pip install -r requirements.txt
#
# CUDA SETUP INSTRUCTIONS:
#
# 1. Ensure you have compatible NVIDIA drivers installed
#    Download latest drivers from: https://www.nvidia.com/Download/index.aspx
#
# 2. Install PyTorch with appropriate CUDA version:
#    - For CUDA 12.1 (newest):
#      pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121
#
#    - For CUDA 11.8 (more compatible with older GPUs):
#      pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118
#
#    - For CPU-only (fallback, not recommended):
#      pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
#
# 3. Test your CUDA installation:
#    python test_cuda.py
#
# 4. If you have CUDA issues, try:
#    - Updating NVIDIA drivers
#    - Installing CUDA Toolkit: https://developer.nvidia.com/cuda-downloads
#    - Checking GPU compatibility: https://developer.nvidia.com/cuda-gpus
#
# Note: Use the '--cpu' flag with simple_run.py to force CPU mode when needed
#
# For YouTube API:
# 1. Create client_secret_*.json in YouTubeApi/ directory
# 2. Run authorize_youtube.bat to set up credentials
